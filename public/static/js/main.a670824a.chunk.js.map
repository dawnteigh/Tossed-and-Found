{"version":3,"sources":["context/user.js","TossedAndFound.png","components/Signup.js","components/Login.js","dataArrays.js","components/MessageForm.js","components/Messages.js","components/MyCourses.js","components/Scores.js","components/DiscReturn.js","components/Home.js","components/NavBar.js","components/Disc.js","components/DiscForm.js","components/Discs.js","components/ScoreForm.js","components/ScoreCard.js","components/Course.js","components/CourseForm.js","components/CourseEditForm.js","components/Courses.js","components/App.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useState","user","setUser","loggedIn","setLoggedIn","selectedCourse","setSelectedCourse","open","setOpen","errorMessages","setErrorMessages","history","useHistory","useEffect","fetch","then","r","json","data","error","push","Provider","value","login","logout","method","Signup","useContext","username","password","password_confirmation","signup","setSignup","handleChange","e","key","target","id","className","Form","onSubmit","preventDefault","headers","body","JSON","stringify","Input","type","label","placeholder","onChange","Button","Login","setUsername","setPassword","toLowerCase","dataArrays","imgs","greetings","MessageForm","handleAddMessage","msgForm","setMsgForm","subject","to","msg","Group","widths","minRows","Messages","filter","setFilter","displayMessages","messages","m","from","includes","map","Comment","style","background","Content","Author","as","Metadata","Moment","created_at","format","Divider","fitted","Text","Actions","Action","onClick","Container","icon","iconPosition","MyCourses","displayCourses","courses","c","i","s","Segment","raised","name","location","best","length","Scores","handleDelete","updatedScores","scores","parseInt","displayScores","score","strokes","par","Item","Image","size","floated","modifiedScore","Header","course","Meta","Description","Extra","divided","DiscReturn","setActiveIndex","search","setSearch","foundDisc","setFoundDisc","src","img","alt","width","height","color","make","model","Home","activeIndex","randomImg","Math","floor","random","circular","centered","handleClick","Grid","Accordion","styled","Title","active","Icon","NavBar","randomGreeting","exact","Disc","disc","handleRemoveDisc","handleUpdateDisc","disc_type","weight","finder_key","lost","checked","setChecked","Card","extra","DiscForm","handleAddDisc","dForm","setDForm","d","Field","control","Discs","discs","updatedDiscs","updatedDisc","displayDiscs","stackable","itemsPerRow","ScoreForm","hole","tally","count","setCount","setScore","setIcon","Number","isInteger","compact","disabled","ScoreCard","holes","holesArray","setHolesArray","setPar","setStrokes","holeCount","setHoleCount","Array","_","p","scoreForms","h","course_id","player","Course","setEditMode","edit","topScores","top_scores","Table","Row","Cell","singleLine","unstackable","HeaderCell","Body","CourseForm","handleAddCourse","cForm","setCForm","CourseEditForm","handleUpdateCourse","Courses","setCourses","editMode","updatedCourse","updatedCourses","App","displayErrors","Modal","basic","onClose","onOpen","inverted","TossedAndFound","path","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a670824a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst UserContext = React.createContext();\n\nfunction UserProvider({ children }) {\n\n  const [user, setUser] = useState({})\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [selectedCourse, setSelectedCourse] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch(\"/api/me\")\n    .then(r => r.json())\n    .then(data => {\n      if (data.error) {\n      setLoggedIn(false)\n      history.push(\"/\")\n      } else {\n          setUser(data)\n          setLoggedIn(true)\n        }\n    })\n  }, [])\n\n  const login = (user) => {\n    setUser(user)\n    setLoggedIn(true)\n    history.push(\"/\")\n  }\n\n  const logout = () => {\n    fetch('/api/logout', {\n      method: \"DELETE\"\n    })\n    .then(() => {\n      setLoggedIn(false)\n      history.push('/login')\n      setSelectedCourse(false)\n      setUser({})\n    })\n  }\n\n  return (\n  <UserContext.Provider\n  value={{ \n    user,\n    setUser,\n    loggedIn,\n    setLoggedIn,\n    open,\n    setOpen,\n    errorMessages,\n    setErrorMessages,\n    selectedCourse,\n    setSelectedCourse,\n    login,\n    logout,\n    history\n    }}>\n    {children}\n  </UserContext.Provider>\n  )\n}\n\nexport { UserContext, UserProvider }","export default __webpack_public_path__ + \"static/media/TossedAndFound.1b9d973d.png\";","import React, { useState, useContext } from 'react'\nimport { UserContext } from '../context/user'\nimport { Form } from 'semantic-ui-react';\n\nconst Signup = () => {\n\n  const { login, setOpen, setErrorMessages } = useContext(UserContext);\n\n  const [signup, setSignup] = useState({\n    username: \"\",\n    password: \"\",\n    password_confirmation: \"\"\n  })\n\n  const handleChange = (e) => {\n    const key = e.target.id\n    const value = e.target.value\n    setSignup({\n      ...signup,\n      [key]: value\n    })\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch('/api/signup', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: signup.username,\n        password: signup.password,\n        password_confirmation: signup.password_confirmation\n      })\n    })\n    .then(r => r.json())\n    .then(user => {\n      if (user.error) {\n        setErrorMessages(user.error)\n        setOpen(true)\n      } else {\n          login(user)\n        }\n    })\n  }\n\n  return (\n    <div className=\"userForm\">\n      <Form onSubmit={handleSubmit}>\n      <Form.Input\n        type=\"text\"\n        label=\"Username\" \n        placeholder=\"Username\"\n        id=\"username\"\n        value={signup.username}\n        onChange={handleChange}\n        />\n      <Form.Input\n        type=\"password\"\n        label=\"Password\" \n        placeholder=\"Password\"\n        id=\"password\"\n        value={signup.password}\n        onChange={handleChange}\n      />\n      <Form.Input\n        type=\"password\"\n        label=\"Confirm Password\" \n        placeholder=\"Confirm Password\"\n        id=\"password_confirmation\"\n        value={signup.password_confirmation}\n        onChange={handleChange}\n      />\n      <Form.Button>Submit</Form.Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Signup","import React, { useContext, useState } from 'react'\nimport { Form } from 'semantic-ui-react';\nimport { UserContext } from '../context/user'\n\nconst Login = () => {\n\n  const { login, setOpen, setErrorMessages } = useContext(UserContext);\n\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch('/api/login', {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        username: username.toLowerCase(),\n        password: password\n      })\n    })\n    .then(r => r.json())\n    .then(user => {\n      if (user.error) {\n        setErrorMessages(user.error)\n        setOpen(true)\n    } else {\n        login(user)\n      }\n    })\n  }\n  \n  return (\n    <div className=\"userForm\">\n      <Form onSubmit={handleSubmit}>\n      <Form.Input\n        type=\"text\"\n        label=\"Username\" \n        placeholder=\"Username\"\n        id=\"username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        />\n      <Form.Input\n        type=\"password\"\n        label=\"Password\" \n        placeholder=\"Password\"\n        id=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Form.Button>Submit</Form.Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Login","export const dataArrays = {\n  imgs: [\n    \"https://cdn.shortpixel.ai/spai/q_lossy+ret_img+to_webp/https://crs4rec.com/wp-content/uploads/2021/01/disc-golf-women-throwing-1.jpg\",\n    \"https://www.si.com/.image/ar_1:1%2Cc_fill%2Ccs_srgb%2Cfl_progressive%2Cq_auto:good%2Cw_1200/MTg3MjA3MzI4NTkwNzM1MjQ2/dynamicdiscs_4.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/e/eb/Disc_golfer_and_basket.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/8/85/Base_disc_golf_120713-F-CC568-008.jpg\",\n    \"https://www.michigan.org/sites/default/files/legacy_images/disc-golf-pure-michigan.jpg\",\n    \"https://preview.redd.it/exc8v7tbdz551.jpg?width=640&crop=smart&auto=webp&s=4bc5d5efd41a528b1519e7851ea4a92a53ca11b6\"\n],\n  greetings: [\n    \"Howdy, \",\n    \"Hey there, \",\n    \"It's good to see you again, \",\n    \"Happy disc golfing, \",\n    \"It's a great day for disc golf, \",\n    \"Welcome, \",\n    \"Thanks for logging in, \",\n    \"Hello, \",\n    \"Hope you're doing well, \"\n  ]\n}","import React, { useContext } from 'react'\nimport { UserContext } from '../context/user'\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Form } from 'semantic-ui-react';\n\nconst MessageForm = ({ handleAddMessage, msgForm, setMsgForm }) => {\n\n  const { setOpen, setErrorMessages } = useContext(UserContext);\n\n  const handleChange = (e) => {\n    const key = e.target.id\n    const value = e.target.value\n    setMsgForm({\n      ...msgForm,\n      [key]: value\n    })\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch('/api/messages', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        subject: msgForm.subject,\n        to: msgForm.to,\n        body: msgForm.body\n      })\n    })\n    .then(r => r.json())\n    .then(msg => {\n      if (msg.error) {\n        setErrorMessages(msg.error)\n        setOpen(true)\n      } else {\n          handleAddMessage(msg)\n          setMsgForm({\n            subject: \"\",\n            to: \"\",\n            body: \"\"\n          })\n        }\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Form.Group widths=\"equal\">\n      <input\n        type=\"text\"\n        id=\"subject\"\n        placeholder=\"Subject\"\n        value={msgForm.subject}\n        onChange={handleChange}\n      />\n      <br/>\n      <input\n        type=\"text\"\n        id=\"to\"\n        placeholder='To:'\n        value={msgForm.to}\n        onChange={handleChange}\n      />\n      <br/>\n      <TextareaAutosize\n        id=\"body\"\n        placeholder='Type your message here'\n        minRows={3}\n        value={msgForm.body}\n        onChange={handleChange}\n      />\n      <br/>\n      </Form.Group>\n      <input type=\"submit\" />\n    </form>\n  )\n}\n\nexport default MessageForm","import React, { useContext, useState } from 'react'\nimport MessageForm from '../components/MessageForm'\nimport Moment from 'moment'\nimport { Comment, Container, Divider, Input } from 'semantic-ui-react'\nimport { UserContext } from '../context/user'\n\nconst Messages = ({ msgForm, setMsgForm }) => {\n  const { user, setUser } = useContext(UserContext)\n  const [filter, setFilter] = useState(\"\")\n\n  const filteredMessages = user.messages.filter(m => (m.subject + \" \" + m.body + \" \" + m.to + \" \" + m.from).toLowerCase().includes(filter.toLowerCase()))\n  const displayMessages = filteredMessages.map(m => {\n    return (\n    <Comment\n      key={m.id}\n      className=\"message\"\n      style={ m.from === user.username ? { background: \"rgba(255, 140, 0, 0.325)\" } : null }\n    >\n      <Comment.Content>\n        <Comment.Author as=\"a\">{m.from === user.username ? \"me\" : m.from}</Comment.Author>\n        <Comment.Metadata>\n          <div>to: { m.to === user.username ? \"me\" : m.to } | {Moment(m.created_at).format('MMMM DD,  LT') }</div>\n        </Comment.Metadata>\n        <Divider fitted />\n        <Comment.Text>\n          <b>{m.subject}</b><br/>\n          {m.body}  \n        </Comment.Text>\n        <Comment.Actions>\n        {m.from === user.username ? null :\n          <Comment.Action onClick={() =>\n            setMsgForm({\n              ...msgForm,\n              subject: m.subject,\n              to: m.from\n              })\n            } >Reply</Comment.Action>}\n        </Comment.Actions>\n      </Comment.Content>\n    </Comment>\n    )\n  })\n\n  const handleAddMessage = (msg) => {\n    setUser({\n      ...user,\n      messages: [...user.messages, msg]\n    })\n  }\n\n  return (\n    <Container>\n      <Input\n        icon='mail'\n        iconPosition='left'\n        value={filter}\n        onChange={(e) => setFilter(e.target.value)}\n        placeholder=\"Search messages\"\n      />\n      <Comment.Group>\n        {displayMessages}\n      </Comment.Group>\n      <br/>\n      <MessageForm handleAddMessage={handleAddMessage} msgForm={msgForm} setMsgForm={setMsgForm} />\n    </Container>\n  )\n}\n\nexport default Messages","import React, { useContext } from 'react'\nimport { UserContext } from '../context/user'\nimport { Segment } from 'semantic-ui-react'\n\nconst MyCourses = () => {\n\n  const { user, history, setSelectedCourse } = useContext(UserContext)\n\n  const displayCourses = user.courses.map((c, i) => {\n    const handleClick = () => {\n      setSelectedCourse(c)\n      history.push('/scorecard')\n    }\n    \n    const modifiedScore = (s) => {\n      if (s === 0) {\n      return `±${s}`\n      } \n        else if (s > 0) {\n          return `+${s}`\n        } else {\n          return s\n        }\n    }\n\n    return (\n      <Segment key={i} onClick={handleClick} className=\"myCourse\" raised>\n        <b>{c.name}</b> in {c.location}\n        <br/>\n        <i>Personal Best</i>: {modifiedScore(c.best)}  \n      </Segment>\n    )\n  })\n\n  return (\n    <div>\n      <h4>\n        A list of the courses you have played at.\n        <br/>\n        Click on one to start scorekeeping a new round!\n      </h4>\n      {user.courses.length === 0 ? \"... unless of course you haven't recorded any scores with us yet. Click the courses tab to get started!\" : displayCourses}\n    </div>\n  )\n}\n\nexport default MyCourses","import React, { useContext } from 'react'\nimport { Item } from 'semantic-ui-react'\nimport Moment from 'moment'\nimport { UserContext } from '../context/user'\n\nconst Scores = () => {\n\n  const { user, setUser } = useContext(UserContext)\n\n  const handleDelete = (e) => {\n    fetch(`/api/scores/${e.target.id}`, {\n      method: \"DELETE\"\n    })\n    const updatedScores = user.scores.filter(s => s.id !== parseInt(e.target.id))\n    setUser({\n      ...user,\n      scores: updatedScores\n    })\n  }\n\n  const displayScores = user.scores.map(s => {\n    const score = s.strokes - s.par\n    const modifiedScore = (s) => {\n      if (s === 0) {\n        return `±${s}`\n      } \n      else if (s > 0) {\n        return `+${s}`\n      } else {\n        return s\n      }\n    }\n    \n    return (\n      <Item key={s.id}>\n        <Item.Image size='mini' floated='right'><span className=\"score\">{modifiedScore(score)}</span></Item.Image>\n        <Item.Content>\n          <Item.Header>{s.course.name}</Item.Header>\n          <Item.Meta>{Moment(s.created_at).format('MMMM DD,  LT')}</Item.Meta>\n          <Item.Description>\n            Par: {s.par}<br/>\n            Your Strokes: {s.strokes}\n          </Item.Description>\n          <Item.Extra><button id={s.id} className='delete' onClick={handleDelete} >Delete</button></Item.Extra>\n        </Item.Content>\n      </Item>   \n    )\n  })\n\n  return (\n    <Item.Group divided>\n      {user.scores.length === 0 ? \"You have no scores to speak of. Get out there and play!\" : displayScores}\n    </Item.Group>\n  )\n}\n\nexport default Scores","import React, { useState, useContext } from 'react'\nimport { UserContext } from '../context/user'\n\nconst DiscReturn = ({ setActiveIndex, msgForm, setMsgForm }) => {\n  const { setOpen, setErrorMessages } = useContext(UserContext)\n  const [search, setSearch] = useState(\"\")\n  const [foundDisc, setFoundDisc] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch(\"/api/found\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        key: search.toLowerCase()\n      })\n    })\n    .then(r => r.json())\n    .then(data => {\n      if (data.error) {\n        setErrorMessages(data.error)\n        setOpen(true)\n      } else {\n      setFoundDisc(data)\n      setSearch(\"\")\n      }\n    })\n  }\n\n  const handleMsg = () => {\n    setMsgForm({...msgForm,\n      subject: `${foundDisc.color} ${foundDisc.model}`,\n      to: foundDisc.user.username\n    })\n    setActiveIndex(\"0\")\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\"\n          size=\"36\"\n          value={search}\n          placeholder=\"Type in the 6 character ID written on the disc\"\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <br/>\n        <input type=\"submit\" />\n      </form>\n      <br/>\n      {foundDisc ? \n      <div>\n        <img src={foundDisc.img} alt=\"Disc associated with given ID\" width=\"200px\" height=\"auto\" /><br/>\n        <b>{foundDisc.color} {foundDisc.make} {foundDisc.model}</b><br/>\n        This disc belongs to {foundDisc.user.username}. Send them a message to let them know you've found it!\n        <br/>\n        <button onClick={handleMsg}>Message {foundDisc.user.username}</button>\n      </div> :\n       null}\n    </div>\n  )\n}\n\nexport default DiscReturn","import React, { useContext, useState } from 'react'\nimport { dataArrays } from '../dataArrays';\nimport { UserContext } from '../context/user';\nimport Messages from '../components/Messages';\nimport MyCourses from './MyCourses';\nimport Scores from '../components/Scores';\nimport DiscReturn from '../components/DiscReturn';\nimport { Accordion, Container, Grid, Icon, Image } from 'semantic-ui-react'\n\nconst Home = () => {\n  const { loggedIn } = useContext(UserContext);\n  const [activeIndex, setActiveIndex] = useState(\"\");\n  const [msgForm, setMsgForm] = useState({\n    subject: \"\",\n    to: \"\",\n    body: \"\"\n  })\n\n  const randomImg = dataArrays.imgs[Math.floor(Math.random() * dataArrays.imgs.length)];\n\n  if (!loggedIn) {\n    return (\n      <Container className=\"home\">\n        <h3>Welcome to Tossed & Found, your new disc golfing companion!<br/>\n        Please log in or sign up to get started.</h3>\n        <br/>\n        <Image circular centered size=\"large\" src={randomImg} alt=\"Tossed and Found\" />\n      </Container>\n    )\n  }\n\n  const handleClick = (e) => {\n    if (e.target.id === activeIndex) {\n      setActiveIndex(false)\n    } else {\n      setActiveIndex(e.target.id)\n    }\n  }\n\n  return (\n    <Grid centered>\n      <br/>\n      <div className=\"home\">\n        <br/>\n        <Accordion styled >\n          <Accordion.Title\n            active={activeIndex === \"0\"}\n            id={0}\n            onClick={handleClick}\n          >\n            <Icon name='dropdown' />\n            Messages\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === \"0\"}>\n            <Messages msgForm={msgForm} setMsgForm={setMsgForm} />\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === \"1\"}\n            id={1}\n            onClick={handleClick}\n          >\n            <Icon name='dropdown' />\n            Scores\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === \"1\"}>\n            <Scores />\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === \"2\"}\n            id={2}\n            onClick={handleClick}\n          >\n            <Icon name='dropdown' />\n            My Courses\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === \"2\"}>\n            <MyCourses />\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === \"3\"}\n            id={3}\n            onClick={handleClick}\n          >\n            <Icon name='dropdown' />\n            Found a disc?\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === \"3\"}>\n            <DiscReturn setActiveIndex={setActiveIndex} msgForm={msgForm} setMsgForm={setMsgForm} />\n          </Accordion.Content>\n        </Accordion>\n      </div>\n    </Grid>\n  )\n}\n\nexport default Home","import React, { useContext } from 'react'\nimport { UserContext } from '../context/user';\nimport { dataArrays } from '../dataArrays';\nimport { NavLink } from \"react-router-dom\";\nimport { Icon } from 'semantic-ui-react';\n\n\nconst NavBar = () => {\n  const { loggedIn, logout, user } = useContext(UserContext);\n  const randomGreeting = dataArrays.greetings[Math.floor(Math.random() * dataArrays.greetings.length)];\n\n if (!loggedIn) {\n  return (\n    <div className='navBar'>\n      <NavLink\n        className=\"navTab\"\n        to=\"/login\"\n        exact\n      >\n        Log In\n      </NavLink>\n      <NavLink\n        className=\"navTab\"\n        to=\"/signup\"\n        exact\n      >\n        Sign Up\n      </NavLink>\n    </div>\n  )\n }\n  return (\n    <div className='navBar'>\n      <span className=\"greeting\">{randomGreeting}<b>{user.username}!</b></span>\n      <NavLink\n        className=\"navTab\"\n        to=\"/\"\n        exact\n      >\n        Home\n      </NavLink>\n      <NavLink\n        className=\"navTab\"\n        to=\"/discs\"\n        exact\n      >\n        Discs\n      </NavLink>\n      <NavLink\n        className=\"navTab\"\n        to=\"/courses\"\n        exact\n      >\n        Courses\n      </NavLink>\n      <NavLink\n        className=\"navTab\"\n        to=\"/scorecard\"\n        exact\n      >\n        Scorecard\n      </NavLink>\n      <button className=\"logout\" onClick={logout}>Logout <Icon name=\"sign-out\" /></button>\n    </div>\n  )\n}\n\nexport default NavBar","import React, { useContext, useState } from 'react'\nimport { Card, Image } from 'semantic-ui-react'\nimport { UserContext } from '../context/user'\n\nconst Disc = ({ disc, handleRemoveDisc, handleUpdateDisc }) => {\n\n  const { id, make, model, color, disc_type, weight, img, finder_key, lost } = disc\n  const [checked, setChecked] = useState(lost)\n  const { setOpen, setErrorMessages } = useContext(UserContext)\n\n  const handleChange = () => {\n    fetch (`/api/discs/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        lost: !lost\n      })\n    })\n    .then(r => r.json())\n    .then(disc => {\n      if (disc.error) {\n        setErrorMessages(disc.error)\n        setOpen(true)\n      } else {\n        handleUpdateDisc(disc)\n        setChecked(!checked)\n      }\n    })\n  }\n\n  const handleDelete = () => {\n    fetch(`/api/discs/${id}`, {\n      method: \"DELETE\"\n    })\n    handleRemoveDisc(id)\n  }\n\n  return (\n    <Card raised>\n    <Image size=\"medium\" src={img} />\n    <Card.Content>\n      <Card.Header>{make} {model}</Card.Header>\n      <Card.Meta>\n        <span className='date'>{disc_type}</span>\n      </Card.Meta>\n      <Card.Description>\n        <b>Color:</b> {color}\n        <br/>\n        <b>Weight:</b> {weight}\n        <br/>\n        <b>ID:</b> {finder_key}\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n    <b>Lost?</b> <input type=\"checkbox\" checked={checked} onChange={handleChange} />\n    <button className=\"delete\" onClick={handleDelete}>Delete</button>\n    </Card.Content>\n  </Card>\n  )\n}\n\nexport default Disc","import React, { useState, useContext } from 'react'\nimport { UserContext } from '../context/user'\nimport { Form } from 'semantic-ui-react'\n\nconst DiscForm = ({ handleAddDisc }) => {\n\n  const [dForm, setDForm] = useState({\n    make: \"\",\n    model: \"\",\n    type: \"\",\n    color: \"\",\n    weight: \"\",\n    img: \"\"\n  })\n\n  const { setOpen, setErrorMessages } = useContext(UserContext)\n\n  const handleChange = (e) => {\n    const key = e.target.id\n    const value = e.target.value\n    setDForm({\n      ...dForm,\n      [key]: value\n    })\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch('/api/discs', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        make: dForm.make,\n        model: dForm.model,\n        disc_type: dForm.type,\n        color: dForm.color,\n        weight: dForm.weight,\n        img: dForm.img\n      })\n    })\n    .then(r => r.json())\n    .then(d => {\n      if (d.error) {\n        setErrorMessages(d.error)\n        setOpen(true)\n    } else {\n        handleAddDisc(d)\n        setDForm({\n          make: \"\",\n          model: \"\",\n          type: \"\",\n          color: \"\",\n          weight: \"\",\n          img: \"\"\n        })\n      }\n    })\n  }\n\n  return (\n    <div id=\"discForm\">\n      Add new disc:\n      <br/>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group widths='equal'>\n          <Form.Field id=\"make\" value={dForm.make} placeholder='Make' control='input'  onChange={handleChange} />\n          <Form.Field id=\"model\" value={dForm.model} placeholder='Model' control='input'  onChange={handleChange} />\n          <Form.Field id=\"color\" value={dForm.color} placeholder='Color' control='input'  onChange={handleChange} />\n          </Form.Group>\n          <Form.Group widths='equal'>\n          <Form.Field id=\"type\" value={dForm.type} control='select' onChange={handleChange} >\n            <option value=\"\">Select disc type</option>\n            <option value=\"Distance Driver\">Distance Driver</option>\n            <option value=\"Fairway Driver\">Fairway Driver</option>\n            <option value=\"Control Driver\">Control Driver</option>\n            <option value=\"Midrange\">Midrange</option>\n            <option value=\"Putter\">Putter</option>\n          </Form.Field>\n          <Form.Field id=\"weight\" value={dForm.weight} placeholder='Weight in Grams' control='input'  onChange={handleChange} />\n          <Form.Field id=\"img\" value={dForm.img} placeholder='Image URL (Optional)' control='input'  onChange={handleChange} />\n          </Form.Group>\n          <input type=\"submit\" />\n      </Form>\n    </div>\n  )\n}\n\nexport default DiscForm","import React, { useContext } from 'react'\nimport Disc from '../components/Disc'\nimport DiscForm from '../components/DiscForm'\nimport { Card, Divider } from 'semantic-ui-react'\nimport { UserContext } from '../context/user'\n\nconst Discs = () => {\n\n  const { user, setUser } = useContext(UserContext)\n\n  if (!user.discs) {\n    return (\n      <h1>Loading...</h1>\n      )\n  }\n\n  const handleAddDisc = (d) => {\n    setUser({\n      ...user,\n      discs: [...user.discs, d ]     \n    })\n  }\n  \n  const handleRemoveDisc = (id) => {\n    const updatedDiscs = user.discs.filter(d => d.id !== id)\n    setUser({\n      ...user,\n      discs: updatedDiscs\n    })\n  }\n\n  const handleUpdateDisc = (updatedDisc) => {\n    const updatedDiscs = user.discs.map(d => {\n      if (d.id === updatedDisc.id) {\n        return updatedDisc;\n      } else {\n        return d;\n      }\n    });\n    setUser({\n      ...user,\n      discs: updatedDiscs\n    })\n  }\n  \n  const displayDiscs = user.discs.map(d => <Disc key={d.id} disc={d} handleRemoveDisc={handleRemoveDisc} handleUpdateDisc={handleUpdateDisc} /> )\n  \n  return (\n    <>\n      <h2>Your Discography</h2>\n      {user.discs.length === 0 ?\n        \"You haven't added any discs yet!\" : \n        <Card.Group stackable itemsPerRow={3} id=\"discGrid\">\n          {displayDiscs}\n        </Card.Group>\n      }\n      <Divider />\n      <div>\n        <DiscForm handleAddDisc={ handleAddDisc } />\n      </div>\n    </>\n  )\n}\n\nexport default Discs","import React, { useState } from 'react'\nimport { Button, Card, Icon } from 'semantic-ui-react'\n\nconst ScoreForm = ({ hole, tally, count, setCount }) => {\n\n  const [score, setScore] = useState({\n    par: \"\",\n    strokes: \"\"\n  })\n  const [icon, setIcon] = useState({\n    img: 'circle outline',\n    color: 'red'\n  })\n\n  const handleChange = (e) => {\n    const key = e.target.id\n    const value = e.target.value\n    setScore({\n      ...score,\n      [key]: parseInt(value)\n    })\n  }\n\n  const handleClick = (e) => {\n    // TODO: find a better way to do this\n    if (!Number.isInteger(score.par, score.strokes)) {\n      tally(\"error\", \"message\")\n    }\n    else if (e.target.id === 'record') {\n      tally(score.par, score.strokes)\n      setIcon({\n        img: 'check circle outline',\n        color: 'green'\n      }) \n      setCount(count + 1)\n    }\n    else if (e.target.id === 'undo') {\n      tally(-score.par, -score.strokes)\n      setIcon({\n        img: 'circle outline',\n        color: 'red'\n      })\n      setCount(count - 1)\n    }\n  }\n\n  return (\n    <Card color='orange' raised >\n      <Card.Content>\n        <Card.Header>\n          Hole {hole} <Icon name={icon.img} color={icon.color} />\n        </Card.Header>\n        <Card.Description>\n          <form>\n            <input\n            type=\"number\"\n            id=\"par\"\n            style={{ width: \"75%\" }}\n            value={score.par}\n            placeholder=\"Par\"\n            onChange={handleChange}\n            />\n          <br/>\n            <input\n            type=\"number\"\n            id=\"strokes\"\n            style={{ width: \"75%\" }}\n            value={score.strokes}\n            placeholder=\"Strokes\"\n            onChange={handleChange}\n            />\n          </form>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button icon id='record' compact color='green' onClick={handleClick} disabled={ icon.color === 'green' ? true : false } >\n            <Icon name='plus' />\n          </Button>\n          <Button icon id='undo' compact color='red' onClick={handleClick} disabled={ icon.color === 'red' ? true : false } >\n            <Icon name='minus' />\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default ScoreForm","import React, { useContext, useEffect, useState } from 'react'\nimport { UserContext } from '../context/user'\nimport ScoreForm from '../components/ScoreForm'\nimport { Card } from 'semantic-ui-react'\n\nconst ScoreCard = () => {\n\n  const { selectedCourse, history, user, setUser, setOpen, setErrorMessages } = useContext(UserContext)\n  const { id, name, holes } = selectedCourse\n  const [holesArray, setHolesArray] = useState([])\n  const [par, setPar] = useState(0)\n  const [strokes, setStrokes] = useState(0)\n  const [holeCount, setHoleCount] = useState(0)\n  \n  useEffect(() => {\n    if (!selectedCourse) {\n      history.push('/courses')\n    } else {\n      setHolesArray(Array.from({length: holes}, (_, i) => i + 1))\n    }\n  }, [])\n\n  const tally = (p, s) => {\n    if (Number.isInteger(p, s)) {\n      setPar(par + p)\n      setStrokes(strokes + s)\n    } else {\n        setErrorMessages([\"Par must be an integer\", \"Strokes must be an integer\"])\n        setOpen(true)\n      }\n  }\n\n  const handleAddScore = (s) => {\n    setUser({\n      ...user,\n      scores: [...user.scores, s],\n      courses: [...user.courses, s.course]  \n    })\n  }\n\n  const scoreForms = holesArray.map(h => <ScoreForm key={h} hole={h} tally={tally} count={holeCount} setCount={setHoleCount} />)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (holeCount < holes) {\n      setErrorMessages([\"Your scorecard is incomplete! Go back and make sure each hole has a recorded score.\"])\n      setOpen(true)\n    } else {\n      fetch('/api/scores', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          course_id: id,\n          par: par,\n          strokes: strokes,\n          player: user.username\n        })\n      })\n      .then(r => r.json())\n      .then(score => {\n        if (score.error) {\n          setErrorMessages(score.error)\n          setOpen(true)\n        } else {\n            handleAddScore(score)\n            history.push('/')\n          }\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h3>Currently playing at: {name}</h3><br/>\n      Enter the par and your number of strokes for each hole. Use the +/- buttons to add or remove the numbers from your total!<br/>\n      <b>Par:</b> {par} <b>Strokes:</b> {strokes}\n      <br/><br/>\n      <Card.Group id=\"formGrid\" itemsPerRow={3} >\n        {scoreForms}\n      </Card.Group>\n        <br/>\n      <form onSubmit={handleSubmit}>\n        <input type=\"submit\" value=\"Finished!\" />\n      </form>\n    </div>\n  )\n}\n\nexport default ScoreCard","import React, { useContext } from 'react'\nimport { UserContext } from '../context/user';\nimport { Card, Table } from 'semantic-ui-react'\n\nconst Course = ({ course, setEditMode, edit }) => {\n\n  const { setSelectedCourse, history } = useContext(UserContext)\n\n  const { id, name, location, holes, top_scores } = course\n\n  const handleClick = () => {\n    setSelectedCourse(course)\n    history.push('/scorecard')\n  }\n\n  const handleEditMode = () => {\n    if (edit === id) {\n      setSelectedCourse(false)\n      setEditMode(false)\n    }\n    else {\n      setSelectedCourse(course)\n      setEditMode(id)\n    }\n  }\n\n  const topScores = top_scores.map(s => {\n    const score = s.strokes - s.par\n    const modifiedScore = (s) => {\n      if (s === 0) {\n        return `±${s}`\n      } \n      else if (s > 0) {\n        return `+${s}`\n      } else {\n        return s\n      }\n    }\n    return (\n      <Table.Row key={s.id} >\n        <Table.Cell>{s.player}</Table.Cell>\n        <Table.Cell>{s.strokes}</Table.Cell>\n        <Table.Cell>{modifiedScore(score)}</Table.Cell>\n      </Table.Row>\n    )\n  })\n\n  return (\n    <Card>\n      <Card.Content>\n        <Card.Header>{name}</Card.Header>\n        <Card.Meta>\n          {location} | {holes} holes<br/>\n          <button onClick={handleClick}>Play</button>\n          <button onClick={handleEditMode}>{edit === id ? \"Cancel\" : \"Edit\"}</button>\n        </Card.Meta>\n        <Card.Description>\n          <b>Top 3 Scores</b><br/>\n          <Table singleLine unstackable>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Player</Table.HeaderCell>\n                <Table.HeaderCell>Strokes</Table.HeaderCell>\n                <Table.HeaderCell>Score</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {topScores}\n            </Table.Body>\n          </Table>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default Course","import React, { useState, useContext } from 'react'\nimport { UserContext } from '../context/user'\nimport { Input } from 'semantic-ui-react'\n\nconst CourseForm = ({ handleAddCourse }) => {\n\n  const [cForm, setCForm] = useState({\n    name: \"\",\n    location: \"\",\n    holes: \"\"\n  })\n\n  const { setOpen, setErrorMessages } = useContext(UserContext)\n\n  const handleChange = (e) => {\n    const key = e.target.id\n    const value = key === \"holes\" ? parseInt(e.target.value) : e.target.value\n    setCForm({\n      ...cForm,\n      [key]: value\n    })\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch('/api/courses', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: cForm.name,\n        location: cForm.location,\n        holes: cForm.holes\n      })\n    })\n    .then(r => r.json())\n    .then(c => {\n      if (c.error) {\n          setErrorMessages(c.error)\n          setOpen(true)\n      } else { \n      handleAddCourse(c)\n      setCForm({\n        name: \"\",\n        location: \"\",\n        holes: \"\"\n      })\n    }\n  })\n  }\n\n  return (\n    <div>\n      Add new course:\n      <br/>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          id=\"name\"\n          label=\"Name\"\n          value={cForm.name}\n          placeholder=\"Name of Course\"\n          onChange={handleChange}\n        />\n          <Input\n            type=\"number\"\n            id=\"holes\"\n            label=\"Holes\"\n            value={cForm.holes}\n            placeholder=\"Number of Holes\"\n            onChange={handleChange}\n          />\n        <Input\n          type=\"text\"\n          id=\"location\"\n          label=\"Location\"\n          value={cForm.location}\n          placeholder=\"Location of Course\"\n          onChange={handleChange}\n        />\n        <br/>\n        <input type=\"submit\" />\n      </form>\n    </div>\n  )\n}\n\nexport default CourseForm","import React, { useState, useContext } from 'react'\nimport { UserContext } from '../context/user'\nimport { Input } from 'semantic-ui-react'\n\n\nconst CourseEditForm = ({ handleUpdateCourse, setEditMode }) => {\n  const [cForm, setCForm] = useState({\n    name: \"\",\n    location: \"\",\n    holes: \"\"\n  })\n\n  const { setOpen, setErrorMessages, selectedCourse } = useContext(UserContext)\n  const { id, name } = selectedCourse\n\n  const handleChange = (e) => {\n    const key = e.target.id\n    const value = key === \"holes\" ? parseInt(e.target.value) : e.target.value\n    setCForm({\n      ...cForm,\n      [key]: value\n    })\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch(`/api/courses/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: cForm.name,\n        location: cForm.location,\n        holes: cForm.holes\n      })\n    })\n    .then(r => r.json())\n    .then(c => {\n      if (c.error) {\n          setErrorMessages(c.error)\n          setOpen(true)\n      } else { \n      handleUpdateCourse(c)\n      setCForm({\n        name: \"\",\n        location: \"\",\n        holes: \"\"\n      })\n      setEditMode(false)\n    }\n  })\n  }\n\n  return (\n    <div>\n      Now editing <b>{name}</b>...\n      <br/>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          id=\"name\"\n          label=\"Name\"\n          value={cForm.name}\n          placeholder=\"Name of Course\"\n          onChange={handleChange}\n        />\n          <Input\n            type=\"number\"\n            id=\"holes\"\n            label=\"Holes\"\n            value={cForm.holes}\n            placeholder=\"Number of Holes\"\n            onChange={handleChange}\n          />\n        <Input\n          type=\"text\"\n          id=\"location\"\n          label=\"Location\"\n          value={cForm.location}\n          placeholder=\"Location of Course\"\n          onChange={handleChange}\n        />\n        <br/>\n        <input type=\"submit\" />\n      </form>\n    </div>\n  )\n}\n\n\nexport default CourseEditForm","import React, { useState, useEffect, useContext } from 'react'\nimport Course from '../components/Course'\nimport CourseForm from '../components/CourseForm'\nimport { Card } from 'semantic-ui-react'\nimport { UserContext } from '../context/user'\nimport CourseEditForm from './CourseEditForm'\n\nconst Courses = () => {\n\n  const [courses, setCourses] = useState([])\n  const [editMode, setEditMode] = useState(false)\n\n  const { setOpen, setErrorMessages } = useContext(UserContext)\n\n  useEffect(() => {\n    fetch('/api/courses')\n    .then(r => r.json())\n    .then(data => {\n      if (data.error) {\n        setErrorMessages(data.error)\n        setOpen(true)\n    } else {\n      setCourses(data)\n    }})\n  }, [])\n\n  const displayCourses = courses.map(c => {\n    return <Course course={c} key={c.id} setEditMode={setEditMode} edit={editMode} />\n  })\n\n  const handleAddCourse = (c) => {\n    setCourses([...courses, c])\n  }\n\n  const handleUpdateCourse = (updatedCourse) => {\n    const updatedCourses = courses.map(c => {\n      if (c.id === updatedCourse.id) {\n        return updatedCourse;\n      } else {\n        return c;\n      }\n    })\n    setCourses(updatedCourses)\n  }\n\n  return (\n    <div>\n      <h4>Click 'Play' on a course to start scorekeeping a new round there!</h4>\n      <Card.Group itemsPerRow={1} id=\"courseGrid\">\n        {displayCourses}\n      </Card.Group>\n      <br/>\n      {editMode ?\n       <CourseEditForm handleUpdateCourse={ handleUpdateCourse } setEditMode={ setEditMode } />  :\n       <CourseForm handleAddCourse={ handleAddCourse } /> \n      } \n    </div>\n  )\n}\n\nexport default Courses","import '../css/App.css'\nimport React, { useContext } from 'react'\nimport { Switch, Route } from \"react-router-dom\"\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\nimport TossedAndFound from \"../TossedAndFound.png\"\nimport Signup from './Signup'\nimport Login from './Login'\nimport Home from './Home'\nimport NavBar from './NavBar'\nimport Discs from './Discs'\nimport ScoreCard from './ScoreCard'\nimport Courses from './Courses'\nimport { UserContext } from '../context/user'\n\nfunction App() {\n  \n  const { open, setOpen, errorMessages } = useContext(UserContext)\n\n  const displayErrors = errorMessages.map((e, i) => {\n    return (\n      <li key={i} >{e}</li>\n    )\n  })\n\n  return (\n    <div className=\"App\">\n      <Modal\n        basic\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        size='small'\n      >\n        <Header icon>\n          <Icon color='yellow' name='exclamation triangle' />\n          Your request could not be completed. Here's why:\n        </Header>\n        <Modal.Content>\n          <ul>\n            {displayErrors}\n          </ul>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='yellow' inverted onClick={() => setOpen(false)}>\n            <Icon name='checkmark' /> Got it\n          </Button>\n        </Modal.Actions>\n      </Modal>\n      <img src={TossedAndFound} alt=\"Tossed and Found\" className=\"logo\" />\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/signup\" render={ (props) => <Signup { ...props } />} />\n        <Route exact path=\"/login\" render={ (props) =>  <Login { ...props } />} />\n        <Route exact path=\"/discs\" render={ (props) => <Discs { ...props }/>} />\n        <Route exact path=\"/scorecard\" render={ (props) => <ScoreCard { ...props }/>} />\n        <Route exact path=\"/courses\" render={ (props) => <Courses { ...props }/>} />\n        <Route exact path=\"/*\" render={ (props) => <Home { ...props }/>} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport { BrowserRouter } from 'react-router-dom';\nimport { UserProvider } from './context/user';\nimport './css/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <UserProvider>\n      <App />\n    </UserProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}